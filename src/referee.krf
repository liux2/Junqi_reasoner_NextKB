;;; Judge movements, replace pieces if possible

(in-microtheory RuleMt)

(isa RuleMt Microtheory)
(comment RuleMt
 "RuleMt contains the rules of the game.")
(genlMt BoardMt RuleMt)

;;; Define horn clause rules

;;; define board
(<== (isa ?board Junqi-Board)
     (comleteBoard ?board 12)
)

(<== (comleteBoard ?board ?newNumber)
     (evaluate ?newNumber (PlusFn ?number 1))
     (comleteBoard ?board ?number)
     ;;; fact: put new chess on board
     (boardState ?board InitBoard)
     ;;; init but not start
)

;;;
(<== (boardState ?board StartBoard)
     (comleteBoard ?board 12)
)

;;; define nodes
(<== (isa ?node1 Soldier-Station)
     (isa ?node2 Soldier-Station)
     (connected ?node1 ?node2)
)

;;; define movements


;;; define winner
